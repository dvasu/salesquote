// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.ingenuity.salesquote.web;

import com.ingenuity.salesquote.domain.Category;
import com.ingenuity.salesquote.domain.Quote;
import com.ingenuity.salesquote.domain.SalesOrder;
import com.ingenuity.salesquote.domain.Sku;
import com.ingenuity.salesquote.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Category, String> ApplicationConversionServiceFactoryBean.getCategoryToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.ingenuity.salesquote.domain.Category, java.lang.String>() {
            public String convert(Category category) {
                return new StringBuilder().append(category.getName()).append(' ').append(category.getDescription()).toString();
            }
        };
    }
    
    public Converter<Long, Category> ApplicationConversionServiceFactoryBean.getIdToCategoryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.ingenuity.salesquote.domain.Category>() {
            public com.ingenuity.salesquote.domain.Category convert(java.lang.Long id) {
                return Category.findCategory(id);
            }
        };
    }
    
    public Converter<String, Category> ApplicationConversionServiceFactoryBean.getStringToCategoryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.ingenuity.salesquote.domain.Category>() {
            public com.ingenuity.salesquote.domain.Category convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Category.class);
            }
        };
    }
    
    public Converter<Quote, String> ApplicationConversionServiceFactoryBean.getQuoteToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.ingenuity.salesquote.domain.Quote, java.lang.String>() {
            public String convert(Quote quote) {
                return new StringBuilder().append(quote.getCustomer()).append(' ').append(quote.getSalesrep()).append(' ').append(quote.getDiscount()).append(' ').append(quote.getQuotedate()).toString();
            }
        };
    }
    
    public Converter<Long, Quote> ApplicationConversionServiceFactoryBean.getIdToQuoteConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.ingenuity.salesquote.domain.Quote>() {
            public com.ingenuity.salesquote.domain.Quote convert(java.lang.Long id) {
                return Quote.findQuote(id);
            }
        };
    }
    
    public Converter<String, Quote> ApplicationConversionServiceFactoryBean.getStringToQuoteConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.ingenuity.salesquote.domain.Quote>() {
            public com.ingenuity.salesquote.domain.Quote convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Quote.class);
            }
        };
    }
    
    public Converter<SalesOrder, String> ApplicationConversionServiceFactoryBean.getSalesOrderToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.ingenuity.salesquote.domain.SalesOrder, java.lang.String>() {
            public String convert(SalesOrder salesOrder) {
                return new StringBuilder().append(salesOrder.getQuanity()).toString();
            }
        };
    }
    
    public Converter<Long, SalesOrder> ApplicationConversionServiceFactoryBean.getIdToSalesOrderConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.ingenuity.salesquote.domain.SalesOrder>() {
            public com.ingenuity.salesquote.domain.SalesOrder convert(java.lang.Long id) {
                return SalesOrder.findSalesOrder(id);
            }
        };
    }
    
    public Converter<String, SalesOrder> ApplicationConversionServiceFactoryBean.getStringToSalesOrderConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.ingenuity.salesquote.domain.SalesOrder>() {
            public com.ingenuity.salesquote.domain.SalesOrder convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), SalesOrder.class);
            }
        };
    }
    
    public Converter<Sku, String> ApplicationConversionServiceFactoryBean.getSkuToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.ingenuity.salesquote.domain.Sku, java.lang.String>() {
            public String convert(Sku sku) {
                return new StringBuilder().append(sku.getName()).append(' ').append(sku.getPrice()).append(' ').append(sku.getTerm()).toString();
            }
        };
    }
    
    public Converter<Long, Sku> ApplicationConversionServiceFactoryBean.getIdToSkuConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.ingenuity.salesquote.domain.Sku>() {
            public com.ingenuity.salesquote.domain.Sku convert(java.lang.Long id) {
                return Sku.findSku(id);
            }
        };
    }
    
    public Converter<String, Sku> ApplicationConversionServiceFactoryBean.getStringToSkuConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.ingenuity.salesquote.domain.Sku>() {
            public com.ingenuity.salesquote.domain.Sku convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Sku.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getCategoryToStringConverter());
        registry.addConverter(getIdToCategoryConverter());
        registry.addConverter(getStringToCategoryConverter());
        registry.addConverter(getQuoteToStringConverter());
        registry.addConverter(getIdToQuoteConverter());
        registry.addConverter(getStringToQuoteConverter());
        registry.addConverter(getSalesOrderToStringConverter());
        registry.addConverter(getIdToSalesOrderConverter());
        registry.addConverter(getStringToSalesOrderConverter());
        registry.addConverter(getSkuToStringConverter());
        registry.addConverter(getIdToSkuConverter());
        registry.addConverter(getStringToSkuConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
